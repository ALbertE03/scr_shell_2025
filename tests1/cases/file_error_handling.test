# Test para verificar el manejo de errores relacionados con archivos

# Limpieza inicial
rm -f /tmp/error_test*.txt

# 1. Intentar leer un archivo que no existe
EXPECT_FAIL: cat /tmp/archivo_inexistente_12345.txt

# 2. Crear un archivo con éxito
echo "Contenido de prueba" > /tmp/error_test1.txt

# 3. Intentar escribir en un directorio inexistente
EXPECT_FAIL: echo "Esto debería fallar" > /tmp/directorio_inexistente/archivo.txt

# 4. Intentar redireccionar a un archivo sin permisos
# Primero creamos el archivo y le quitamos permisos de escritura
touch /tmp/error_test_readonly.txt
chmod 444 /tmp/error_test_readonly.txt

# Ahora intentamos escribir en él (debería fallar)
EXPECT_FAIL: echo "Sin permisos" > /tmp/error_test_readonly.txt

# Restauramos permisos para poder borrarlo después
chmod 644 /tmp/error_test_readonly.txt

# 5. Redirección con entrada de archivo vacío
touch /tmp/error_test_empty.txt
cat < /tmp/error_test_empty.txt | wc -l | grep "0"

# 6. Intentar redireccionar a un dispositivo que no existe
EXPECT_FAIL: echo "test" > /dev/dispositivo_inexistente

# 7. Manejo de tuberías con comandos que fallan
cat /archivo_inexistente | grep "algo"

# 8. Redirección de entrada con archivo que existe pero sin permisos de lectura
touch /tmp/error_test_noread.txt
chmod 333 /tmp/error_test_noread.txt
EXPECT_FAIL: cat < /tmp/error_test_noread.txt

# Restauramos permisos para poder borrarlo después
chmod 644 /tmp/error_test_noread.txt

# 9. Intentar crear un archivo en un directorio de solo lectura
# (Omitido porque requeriría elevar privilegios)

# 10. Redirección a un archivo existente (no debería fallar, sobreescribe)
echo "Original" > /tmp/error_test_overwrite.txt
echo "Sobreescrito" > /tmp/error_test_overwrite.txt
cat /tmp/error_test_overwrite.txt | grep "Sobreescrito"

# 11. Limpieza final
rm -f /tmp/error_test*.txt 